name: Package and Publish
run-name : ${{ github.actor }} is running Package and Publish
on: [push, pull_request]

defaults:
  run:
    shell: pwsh

jobs:
  package-with-vsce:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - run: npm install -g @vscode/vsce
        shell: bash
      - run: vsce -V
        shell: bash
      - id: get-suffix
        name: Get package version suffix
        run: |
          $packageVersionSuffix = ""

          $branchName = ""
          if ($env:GITHUB_REF -match "refs/heads/(.*)") {
            $branchName = $Matches[1]
          }

          #Get version from package.json
          $packageVersionFromJson = (Get-Content package.json | ConvertFrom-Json).version

          if ($branchName -eq "master" -or $branchName -eq "main") {
            $packageVersionSuffix = "$packageVersionFromJson"
            echo "This is the default branch, so the package version will be : [$packageVersionSuffix]"
          } else {
            #$packageVersionSuffix = "$packageVersionFromJson.$env:GITHUB_RUN_ID"
            $packageVersionSuffix = "$packageVersionFromJson"
            echo "This is not the default branch, so a package version suffix: [$packageVersionSuffix] will be used."
          }
          "package-version-suffix=$packageVersionSuffix" >> $env:GITHUB_OUTPUT
#      - run: env

      - id: "package-vsix"
        name : "Package VSIX"
        shell: bash
        run: |
          pwd
          ls
          npm --no-git-tag-version -allow-same-version version ${{steps.get-suffix.outputs.package-version-suffix}}
          echo "packageVersionSuffix: ${{steps.get-suffix.outputs.package-version-suffix}}"
          vsce ls
          mkdir -p build && vsce package --out build/
#      - name: Copy VSIX to package folder
#        shell: bash
#        run: |
#          mkdir package
#          cp *.vsix package

      - id: "publish-vsix"
        name : "Publish VSIX"
        shell: bash
        run: |
          pwd
          ls
          echo "packageVersionSuffix: ${{steps.get-suffix.outputs.package-version-suffix}}"
          vsce publish -p ${{secrets.MARKETPLACE_PAT}} --packagePath "build/aqovia-vscode-extension-pack-${{steps.get-suffix.outputs.package-version-suffix}}.vsix"


