# CI and PR build script

pool:
  vmImage: ubuntu-latest

steps:
  # for convenience, we tag CI-produced packages with a version number
  # pointing to the commit which was built. for PRs, also include the PR #.
  - bash: |
      PACKAGE_VERSION=$(node -p "require('./package.json').version")

      if [ -n "$SYSTEM_PULLREQUEST_PULLREQUESTNUMBER" ]; then
        VERSION_STRING=${PACKAGE_VERSION}-pr-${SYSTEM_PULLREQUEST_PULLREQUESTNUMBER}-$(git rev-parse --short HEAD)
      else
        #VERSION_STRING=${PACKAGE_VERSION}-ci-$(git rev-parse --short HEAD)
        VERSION_STRING=${PACKAGE_VERSION}
      fi

      npm --no-git-tag-version version $VERSION_STRING
      echo "##vso[build.updatebuildnumber]${VERSION_STRING}_${BUILD_BUILDID}"
      echo "$PACKAGE_VERSION" > version.txt
      echo "$VERSION_STRING" > version-string.txt
      echo "$BUILD_BUILDID" > build-id.txt
    displayName: Set version number of package and build

  - bash: |
      echo "##vso[task.setvariable variable=EXTENSIONSLIST;]$(jq .extensionPack package.json)"  
      echo $EXTENSIONSLIST 
    displayName: setExtensionsList
    
  - script: npm install
    displayName: npm install
    #workingDirectory: $(Pipeline.Workspace)/aqovia-vs-code-extension-pack

  #- script: npm run test
  #  displayName: Run unit tests

  # Acquire the `vsce` tool and use it to package
  - script: |
      sudo npm install -g vsce
      vsce package
    displayName: Create VSIX

  # For releasable builds, we'll want the branch
  # Expects that a 'version.txt' has been laid down by a previous step
  - bash: |
      echo $(Build.SourceBranch) | sed "s|refs/[^/]*/||" > branch.txt
      PACKAGE_VERSION=$(cat version.txt)
      VERSION_REGEX="## $(echo $PACKAGE_VERSION | sed 's/\./\\./g')"
    displayName: Get branch

  # Choose files to publish
  - task: CopyFiles@2
    displayName: Stage VSIX for publishing
    inputs:
      contents: |-
        *.vsix
        version.txt
        branch.txt
        version-string.txt
        build-id.txt
      targetFolder: $(Pipeline.Workspace)/package

  - pwsh: |
      npm install -g @vscode/vsce

      $PACKAGE_VERSION=$(cat version.txt)
      $VERSION_STRING=$(cat version-string.txt)
      $BUILD_ID=$(cat build-id.txt)

      vsce publish -p $(MarketplacePAT) --packagePath aqovia-vscode-extension-pack-$PACKAGE_VERSION.vsix
    workingDirectory: $(Pipeline.Workspace)/package
    displayName: Publish To Marketplace

  # # Publish files as an artifact
  # - task: PublishPipelineArtifact@1
  #   displayName: Publish VSIX
  #   inputs:
  #     artifact: git-mob-vs-code
  #     targetPath: $(Build.ArtifactStagingDirectory)

  